# Generated by Django 4.2.1 on 2023-05-23 01:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DevicePart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="DeviceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Specification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("sort_order", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Technician",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=3, unique=True)),
                ("sort_order", models.IntegerField(default=0)),
            ],
            options={
                "unique_together": {("name", "code")},
            },
        ),
        migrations.CreateModel(
            name="TestInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.device",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestInstanceSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=200)),
                (
                    "specification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.specification",
                    ),
                ),
                (
                    "test_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.testinstance",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestInstanceResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("P", "Pass"),
                            ("F", "Fail"),
                            ("O", "Other"),
                            ("NA", "Not Applicable"),
                            ("NT", "Not Tested"),
                        ],
                        default="NT",
                        help_text="Select other if the result is not pass or fail.  This can be a cosmetic issue or something else that does not affect the functionality of the device.",
                        max_length=2,
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.test",
                    ),
                ),
                (
                    "test_instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.testinstance",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="testinstance",
            name="specifications",
            field=models.ManyToManyField(
                through="checklists.TestInstanceSpecification",
                to="checklists.specification",
            ),
        ),
        migrations.AddField(
            model_name="testinstance",
            name="technician",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="checklists.technician"
            ),
        ),
        migrations.AddField(
            model_name="testinstance",
            name="tests",
            field=models.ManyToManyField(
                through="checklists.TestInstanceResult", to="checklists.test"
            ),
        ),
        migrations.CreateModel(
            name="DeviceTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.device",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.test",
                    ),
                ),
            ],
            options={
                "verbose_name": "Device Test (DU)",
                "verbose_name_plural": "Device Tests (DU)",
                "unique_together": {("device", "test")},
            },
        ),
        migrations.CreateModel(
            name="DeviceSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.device",
                    ),
                ),
                (
                    "specification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checklists.specification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Device Specification (DU)",
                "verbose_name_plural": "Device Specifications (DU)",
                "unique_together": {("device", "specification")},
            },
        ),
        migrations.AddField(
            model_name="device",
            name="device_part",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="checklists.devicepart"
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="device_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="checklists.devicetype"
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="specifications",
            field=models.ManyToManyField(
                through="checklists.DeviceSpecification", to="checklists.specification"
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="tests",
            field=models.ManyToManyField(
                through="checklists.DeviceTest", to="checklists.test"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="device",
            unique_together={("device_type", "device_part")},
        ),
    ]
